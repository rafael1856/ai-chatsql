services:
  mamba:
    image: condaforge/miniforge3:latest
    volumes:
      - .:/code
    container_name: mamba-1
    pull_policy: always
    tty: true
    restart: always
    networks:
      - group1-docker

  ollallm:
    build:
      context: .
      dockerfile: dockerfile-ollallm
    container_name: ${CONTAINER_NAME:-ollallm} 
    ports:
      - 21434:11434
      - 24000:4000
    volumes:
      - .:/code
    pull_policy: always
    tty: true
    restart: always
    environment:
      - OLLAMA_KEEP_ALIVE=24h
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_DEBUG=1 
    networks:
      - group1-docker

  db:
    hostname: pgvector_db
    container_name: pgvector_db_container
    image: ankane/pgvector
    ports:
      - 25432:5432
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - ./local_pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
      
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin4_container
    restart: unless-stopped
    ports:
      - 20080:80
    user: "$UID:$GID"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin

networks:
  group1-docker:
    external: false
  
# docker compose up --build
